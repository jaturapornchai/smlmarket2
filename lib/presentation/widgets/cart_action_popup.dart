import 'package:flutter/material.dart';

/// üõí Popup ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏Ç‡∏≠‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
/// ‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏≠‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ UX ‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô
class CartActionPopup extends StatelessWidget {
  final VoidCallback onQuickOrder;
  final VoidCallback onNegotiate;
  final VoidCallback onCreateQuotation;
  final double totalAmount;
  final int itemCount;

  const CartActionPopup({
    super.key,
    required this.onQuickOrder,
    required this.onNegotiate,
    required this.onCreateQuotation,
    required this.totalAmount,
    required this.itemCount,
  });

  /// ‡πÅ‡∏™‡∏î‡∏á Popup ‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ
  static Future<void> show(
    BuildContext context, {
    required VoidCallback onQuickOrder,
    required VoidCallback onNegotiate,
    required VoidCallback onCreateQuotation,
    required double totalAmount,
    required int itemCount,
  }) {
    return showDialog(
      context: context,
      barrierDismissible: true,
      builder: (context) => CartActionPopup(
        onQuickOrder: onQuickOrder,
        onNegotiate: onNegotiate,
        onCreateQuotation: onCreateQuotation,
        totalAmount: totalAmount,
        itemCount: itemCount,
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Dialog(
      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16)),
      elevation: 8,
      child: Container(
        constraints: const BoxConstraints(maxWidth: 400),
        child: Padding(
          padding: const EdgeInsets.all(24),
          child: Column(
            mainAxisSize: MainAxisSize.min,
            children: [
              // Header ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏¥‡∏î
              Row(
                children: [
                  Icon(
                    Icons.shopping_cart,
                    color: Colors.blue.shade600,
                    size: 28,
                  ),
                  const SizedBox(width: 12),
                  const Expanded(
                    child: Text(
                      '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ',
                      style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                  ),
                  IconButton(
                    onPressed: () => Navigator.pop(context),
                    icon: Icon(Icons.close, color: Colors.grey.shade600),
                    tooltip: '‡∏õ‡∏¥‡∏î',
                  ),
                ],
              ),
              const SizedBox(height: 16),

              // ‡∏™‡∏£‡∏∏‡∏õ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
              Container(
                padding: const EdgeInsets.all(16),
                decoration: BoxDecoration(
                  color: Colors.grey.shade50,
                  borderRadius: BorderRadius.circular(12),
                  border: Border.all(color: Colors.grey.shade200),
                ),
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  children: [
                    Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Text(
                          '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤',
                          style: TextStyle(
                            color: Colors.grey.shade600,
                            fontSize: 14,
                          ),
                        ),
                        Text(
                          '$itemCount ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£',
                          style: const TextStyle(
                            fontWeight: FontWeight.w600,
                            fontSize: 16,
                          ),
                        ),
                      ],
                    ),
                    Column(
                      crossAxisAlignment: CrossAxisAlignment.end,
                      children: [
                        Text(
                          '‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°',
                          style: TextStyle(
                            color: Colors.grey.shade600,
                            fontSize: 14,
                          ),
                        ),
                        Text(
                          '‡∏ø${_formatCurrency(totalAmount)}',
                          style: TextStyle(
                            fontWeight: FontWeight.bold,
                            fontSize: 18,
                            color: Colors.blue.shade600,
                          ),
                        ),
                      ],
                    ),
                  ],
                ),
              ),
              const SizedBox(height: 20),

              // ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
              Container(
                padding: const EdgeInsets.all(16),
                decoration: BoxDecoration(
                  color: Colors.blue.shade50,
                  borderRadius: BorderRadius.circular(12),
                  border: Border.all(color: Colors.blue.shade200),
                ),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Row(
                      children: [
                        Icon(
                          Icons.info_outline,
                          color: Colors.blue.shade700,
                          size: 18,
                        ),
                        const SizedBox(width: 8),
                        Text(
                          '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£:',
                          style: TextStyle(
                            fontWeight: FontWeight.w600,
                            color: Colors.blue.shade800,
                            fontSize: 15,
                          ),
                        ),
                      ],
                    ),
                    const SizedBox(height: 12),
                    _buildInfoRow(
                      '‚Ä¢ ‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏±‡∏ô‡∏ó‡∏µ:',
                      '‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÉ‡∏´‡πâ Admin ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡∏ô‡∏ó‡∏µ',
                    ),
                    const SizedBox(height: 6),
                    _buildInfoRow(
                      '‚Ä¢ ‡∏ï‡πà‡∏≠‡∏£‡∏≠‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤:',
                      '‡πÄ‡∏à‡∏£‡∏à‡∏≤‡∏£‡∏≤‡∏Ñ‡∏≤‡πÅ‡∏•‡∏∞‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡πà‡∏≠‡∏ô‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠',
                    ),
                    const SizedBox(height: 6),
                    _buildInfoRow(
                      '‚Ä¢ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤:',
                      '‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô',
                    ),
                  ],
                ),
              ),
              const SizedBox(height: 24),

              // ‡∏õ‡∏∏‡πà‡∏°‡∏ï‡πà‡∏≤‡∏á‡πÜ
              Column(
                children: [
                  // ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
                  SizedBox(
                    width: double.infinity,
                    child: ElevatedButton.icon(
                      onPressed: () {
                        Navigator.pop(context);
                        onQuickOrder();
                      },
                      icon: const Icon(
                        Icons.flash_on,
                        color: Colors.white,
                        size: 20,
                      ),
                      label: const Text(
                        '‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏±‡∏ô‡∏ó‡∏µ (Quick Order)',
                        style: TextStyle(
                          fontSize: 16,
                          fontWeight: FontWeight.w600,
                          color: Colors.white,
                        ),
                      ),
                      style: ElevatedButton.styleFrom(
                        backgroundColor: Colors.blue.shade600,
                        padding: const EdgeInsets.symmetric(vertical: 16),
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(12),
                        ),
                        elevation: 2,
                      ),
                    ),
                  ),
                  const SizedBox(height: 12),

                  // ‡∏õ‡∏∏‡πà‡∏°‡∏ï‡πà‡∏≠‡∏£‡∏≠‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤ ‡πÅ‡∏•‡∏∞ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤
                  Row(
                    children: [
                      // ‡∏õ‡∏∏‡πà‡∏°‡∏ï‡πà‡∏≠‡∏£‡∏≠‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤
                      Expanded(
                        child: SizedBox(
                          height: 50,
                          child: ElevatedButton.icon(
                            onPressed: () {
                              Navigator.pop(context);
                              onNegotiate();
                            },
                            icon: const Icon(
                              Icons.handshake,
                              color: Colors.white,
                              size: 18,
                            ),
                            label: const Text(
                              '‡∏ï‡πà‡∏≠‡∏£‡∏≠‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤',
                              style: TextStyle(
                                fontSize: 14,
                                fontWeight: FontWeight.w600,
                                color: Colors.white,
                              ),
                            ),
                            style: ElevatedButton.styleFrom(
                              backgroundColor: Colors.orange.shade600,
                              shape: RoundedRectangleBorder(
                                borderRadius: BorderRadius.circular(12),
                              ),
                              elevation: 2,
                            ),
                          ),
                        ),
                      ),
                      const SizedBox(width: 12),

                      // ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤
                      Expanded(
                        child: SizedBox(
                          height: 50,
                          child: ElevatedButton.icon(
                            onPressed: () {
                              Navigator.pop(context);
                              onCreateQuotation();
                            },
                            icon: const Icon(
                              Icons.description,
                              color: Colors.white,
                              size: 18,
                            ),
                            label: const Text(
                              '‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤',
                              style: TextStyle(
                                fontSize: 13,
                                fontWeight: FontWeight.w600,
                                color: Colors.white,
                              ),
                            ),
                            style: ElevatedButton.styleFrom(
                              backgroundColor: Colors.green.shade600,
                              shape: RoundedRectangleBorder(
                                borderRadius: BorderRadius.circular(12),
                              ),
                              elevation: 2,
                            ),
                          ),
                        ),
                      ),
                    ],
                  ),
                ],
              ),
              const SizedBox(height: 16),

              // ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
              TextButton(
                onPressed: () => Navigator.pop(context),
                style: TextButton.styleFrom(
                  padding: const EdgeInsets.symmetric(
                    vertical: 12,
                    horizontal: 24,
                  ),
                ),
                child: Text(
                  '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å',
                  style: TextStyle(
                    color: Colors.grey.shade600,
                    fontSize: 16,
                    fontWeight: FontWeight.w500,
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  Widget _buildInfoRow(String title, String description) {
    return Row(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          title,
          style: TextStyle(
            fontSize: 13,
            fontWeight: FontWeight.w600,
            color: Colors.blue.shade700,
          ),
        ),
        const SizedBox(width: 6),
        Expanded(
          child: Text(
            description,
            style: TextStyle(
              fontSize: 13,
              color: Colors.blue.shade700,
              height: 1.3,
            ),
          ),
        ),
      ],
    );
  }

  String _formatCurrency(double amount) {
    // ‡∏ü‡∏≠‡∏£‡πå‡πÅ‡∏°‡∏ï‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢ ‡πÄ‡∏ä‡πà‡∏ô 12,575.50 ‡∏´‡∏£‡∏∑‡∏≠ 12,575
    final formatted = amount.toStringAsFixed(2);
    if (formatted.endsWith('.00')) {
      return formatted.substring(0, formatted.length - 3);
    }
    return formatted;
  }
}
