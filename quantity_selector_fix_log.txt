🛠️ **แก้ไขปัญหา Quantity Selector ใน Product Detail Screen**
========================================================

**วันที่**: 24 มิถุนายน 2025
**เวลา**: 15:45 น.

## 🔍 ปัญหาที่พบ
ในหน้าจอรายละเอียดสินค้า เมื่อกดเปลี่ยนจำนวน ยอดคงเหลือยังคงแสดงข้อมูลเก่าจาก `widget.product.qtyAvailable` แทนที่จะใช้ยอดคงเหลือล่าสุดจาก `CartCubit`

## ⚡ สาเหตุ
`_buildQuantitySelector()` ใช้ `widget.product.qtyAvailable` โดยตรง ไม่ได้ wrap ด้วย `BlocBuilder<CartCubit, CartState>` เหมือนใน `_buildStockStatus()`

## 🔧 การแก้ไข

### ✅ แก้ไข `_buildQuantitySelector()`:
1. **เพิ่ม `BlocBuilder<CartCubit, CartState>`** รอบ method
2. **ใช้ `buildWhen`** เพื่อ rebuild เฉพาะเมื่อ `stockQuantities` เปลี่ยนสำหรับสินค้านี้
3. **ดึงยอดคงเหลือจาก `state.stockQuantities[icCode]`** แทน `widget.product.qtyAvailable`
4. **แยก logic เป็น `_buildQuantitySelectorWidget()`** เพื่อให้โค้ดชัดเจน

### ✅ โครงสร้างใหม่:
```dart
Widget _buildQuantitySelector() {
  return BlocBuilder<CartCubit, CartState>(
    buildWhen: (previous, current) {
      // Rebuild เฉพาะเมื่อ stockQuantities เปลี่ยนสำหรับสินค้านี้
      if (current is CartLoaded && previous is CartLoaded) {
        final icCode = widget.product.id ?? '';
        return previous.stockQuantities[icCode] != current.stockQuantities[icCode];
      }
      return true;
    },
    builder: (context, state) {
      // ใช้ยอดคงเหลือจาก CartCubit ถ้าหาได้
      double qtyAvailable = widget.product.qtyAvailable ?? 0;
      if (state is CartLoaded) {
        final icCode = widget.product.id ?? '';
        qtyAvailable = state.stockQuantities[icCode] ?? qtyAvailable;
      }
      
      final maxQuantity = qtyAvailable > 0 ? qtyAvailable.toDouble() : 1.0;
      return _buildQuantitySelectorWidget(qtyAvailable, maxQuantity);
    },
  );
}
```

## การแก้ไข Logic การเลือกจำนวนสินค้าในตะกร้า (2025-01-27 21:30)

### ปัญหาที่แก้ไข:
- ฟังก์ชัน _saveQuantity() ใน cart_item_widget_new.dart ยังใช้ logic เดิมที่เช็คเพียง newQuantity > qtyAvailable
- ทำให้ลูกค้าไม่สามารถแก้ไขจำนวนในตะกร้าได้ครบตามยอดที่แสดง

### การแก้ไข:
- แก้ไข _saveQuantity() ให้ใช้ maxAllowedQuantity = qtyAvailable + จำนวนในตะกร้าปัจจุบัน
- เหมือนกับ logic ที่ใช้ในปุ่ม + และ _canIncrease()

### โค้ดที่แก้ไข:
```dart
// เดิม (ผิด):
if (widget.qtyAvailable != null && newQuantity > widget.qtyAvailable!) {
  _showErrorDialog('จำนวนเกินยอดคงเหลือ (${NumberFormatter.formatQuantity(widget.qtyAvailable!)} ชิ้น)');
  return;
}

// ใหม่ (ถูกต้อง):
if (widget.qtyAvailable != null) {
  final maxAllowedQuantity = widget.qtyAvailable! + widget.item.quantity;
  if (newQuantity > maxAllowedQuantity) {
    _showErrorDialog('จำนวนเกินยอดสูงสุดที่สั่งได้ (${NumberFormatter.formatQuantity(maxAllowedQuantity)} ชิ้น)');
    return;
  }
}
```

### สถานะปัจจุบันในการทดสอบ:
- Build/Run สำเร็จ
- ในตะกร้ามีสินค้า C-TOYOTA-7198: 23 ชิ้น
- ยอดคงเหลือจริง: 0.0 ชิ้น  
- ยอดสูงสุดที่สั่งได้: 0.0 + 23 = 23 ชิ้น

### การทดสอบที่ต้องทำ:
1. กดปุ่ม + --> ควรไม่สามารถเพิ่มได้ (ถึง limit แล้ว)
2. แก้ไขจำนวนเป็น 24 --> ควรแสดง error 
3. แก้ไขจำนวนเป็น 23 หรือน้อยกว่า --> ควรทำได้

## 🎯 ผลลัพธ์ที่คาดหวัง
✅ **ยอดคงเหลือใน Stock Status และ Quantity Selector sync กัน**
✅ **ข้อมูลเป็น real-time จากฐานข้อมูล**
✅ **ไม่มีการแสดงยอดผิดเมื่อเปลี่ยนจำนวน**
✅ **ป้องกันเพิ่มสินค้าเกินยอดคงเหลือได้อย่างแม่นยำ**

## 🔄 สถานะ: ✅ เสร็จสิ้น - พร้อมทดสอบ

ตอนนี้พร้อมทดสอบแล้ว! 🚀
